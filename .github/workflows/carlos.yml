name: carlosRunner
on: [push]
jobs:
  DeployingPipeline:
    runs-on: carloslabel
    steps:
      - name: "cleaning"
        run: |
          rm -rf ./CarlosTicketsRUs
      - name: "cloning"
        run: git clone https://github.com/CarlosBlanco1/CarlosTicketsRUs.git
      - name: deploy
        run: |
          cd ./CarlosTicketsRUs

          docker build -t 144.17.92.12:5000/carlos/carlos-web:$GITHUB_RUN_ID .
          docker push 144.17.92.12:5000/carlos/carlos-web:$GITHUB_RUN_ID

          kubectl delete configmap blazor-web-postgres-init -n carlos 
          kubectl -n carlos create configmap blazor-web-postgres-init --from-file=init.sql

          cd kube-carlos-configs

          kubectl delete configmap carlos-otel-config -n carlos || true
          kubectl -n carlos create configmap carlos-otel-config --from-file=carlos-collector-config.yml  

          kubectl delete configmap carlos-grafana-datasource-config -n carlos || true
          kubectl -n carlos create configmap carlos-grafana-datasource-config --from-file=carlos-datasource.yml

          cd ..

          export RUN_ID=${{ github.run_id }}
          for file in ./kubeCarlosDeploy/*; do
            echo "Applying $file"
            cat $file | envsubst | kubectl apply -f -
          done


    #  - name: "build"
    #    run: | 
    #     cd ./CarlosTicketsRUs/StagingCarlos
    #     docker compose up --build -d
    #  - name: "run integration tests"
    #    run: |
    #     cd ./CarlosTicketsRUs/TestTicket/
    #     dotnet test
    #  - name: "run unit tests"
    #    run: |
    #     cd ./CarlosTicketsRUs/UnitTests/
    #     dotnet test 
    #  - name: "run linting"
    #    run: |
    #     cd ./CarlosTicketsRUs/
    #     docker run --rm -v "$(pwd):/app" -w /app -e DOTNET_CLI_HOME="/tmp/dotnet" --user $(id -u):$(id -g) mcr.microsoft.com/dotnet/sdk:8.0 dotnet format --verify-no-changes --severity warn 
    #  - name: "build warnings fail"
    #    run: |
    #     cd ./CarlosTicketsRUs/
    #     docker run --rm -v "$(pwd):/app" -w /app/ -e DOTNET_CLI_HOME="/tmp/dotnet" --user $(id -u):$(id -g) mcr.microsoft.com/dotnet/sdk:8.0 dotnet build


     #- uses: actions/checkout@v2

     #- name: "Notifies Teams Channel"
     #  uses: dchourasia/ms-teams-notification@1.0 
     #  if: always()
     #  with:
     #     github-token: ${{ github.token }}
     #     webhook-uri: ${{ secrets.CARLOS_WEBHOOK }}
     #had to wait

